spring:
  mvc:
    async:
      request-timeout: ${SPRING_MVC_ASYNC_REQUEST-TIMEOUT:-1}
  application:
    name: rag
#  autoconfigure:
#    exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/postgres}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:postgres}
  ai:
    retry:
      backoff:
        initial-interval: 2000
        max-interval: 10000
        multiplier: 4
      max-attempts: 20
    ollama:
      embedding:
        model: ${EMBEDDING_MODEL:nomic-embed-text}
        options:
          top-k: ${OLLAMA_EMBEDDING_TOP-K:10}
          num-thread: ${EMBEDDINGS_NUM_THREAD:8}
          num-ctx: 8192
          num-batch: 768
          top-p: ${OLLAMA_EMBEDDING_TOP-P:0.5}
        enabled: true
      base-url: http://host.docker.internal:11434
      chat:
        model: ${CHAT_MODEL:llama3-gradient}
        options:
          num-ctx: ${CHAT_MODEL_CONTEXT_LENGTH:64000}
          num-thread: ${CHAT_NUM_THREAD:8}
          top-k: ${CHAT_TOP-K:1}
          top-p: ${CHAT_TOP-P:0.5}
          temperature: ${CHAT_TEMPERATURE:0.5}
    vectorstore:
      pgvector:
        index-type: ${VECTORSTORE_PGVECTOR_INDEX-TYPE:hnsw}
        dimensions: ${VECTORSTORE_PGVECTOR_DIMENSIONS:768}
        distance-type: cosine_distance

#      milvus:
#        collection-name: ${MILVUS_COLLECTION_NAME:vector_store1}
#        embedding-dimension: ${MILVUS_EMBEDDING_DIM:768}
database:
  init: ${DATABASE_INIT:false}
queries:
  top-k: ${QUERIES_TOP-K:3}